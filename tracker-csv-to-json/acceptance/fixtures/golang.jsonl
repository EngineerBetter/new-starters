{"name": "I know about concurrency in Golang", "story_type": "feature", "description": "On [A Tour of Go](https://tour.golang.org/welcome/1) complete the _Concurrency_ section.\n\n## Acceptance Steps\n\n* Talk to your mentor about what you've learnt", "labels": ["self-paced", "golang"], "tasks": [{"description": "Completed: Goroutines"}, {"description": "Completed: Channels"}, {"description": "Completed: Buffered Channels"}, {"description": "Completed: Range and Close"}, {"description": "Completed: Select"}, {"description": "Completed: Default Selection"}, {"description": "Completed: Exercise: Equivalent Binary Trees"}, {"description": "Completed: Exercise: Equivalent Binary Trees"}, {"description": "Completed: sync.Mutex"}, {"description": "Completed: Exercise: Web Crawler"}, {"description": "Read: Where to Go from here..."}]}
{"name": "I know about methods and interfaces in Golang", "story_type": "feature", "description": "On [A Tour of Go](https://tour.golang.org/welcome/1) complete the _Methods and interfaces_ section.\n\n## Acceptance Steps\n\n* Talk to your mentor about what you've learnt", "labels": ["self-paced", "golang"], "tasks": [{"description": "Completed: Methods"}, {"description": "Completed: Methods are functions"}, {"description": "Completed: Methods continued"}, {"description": "Completed: Pointer receivers"}, {"description": "Completed: Pointers and functions"}, {"description": "Completed: Methods and pointer indirection"}, {"description": "Completed: Methods and pointer indirection (2)"}, {"description": "Completed: Choosing a value or pointer receiver"}, {"description": "Completed: Interfaces"}, {"description": "Completed: Interfaces are implemented implicitly"}, {"description": "Completed: Interface values"}, {"description": "Completed: Interface values with nil underlying values"}, {"description": "Completed: Nil interface values"}, {"description": "Completed: The empty interface"}, {"description": "Completed: Type assertions"}, {"description": "Completed: Type switches"}, {"description": "Completed: Stringers"}, {"description": "Completed: Exercise: Stringers"}, {"description": "Completed: Errors"}, {"description": "Completed: Exercise: Errors"}, {"description": "Completed: Readers"}, {"description": "Completed: Exercise: Readers"}, {"description": "Completed: Exercise: rot13Reader"}, {"description": "Completed: Images"}, {"description": "Completed: Exercise: Images"}]}
{"name": "I know about more types in Golang", "story_type": "feature", "description": "On [A Tour of Go](https://tour.golang.org/welcome/1) complete the _More types_ section. Don't worry if it takes a while for pointers to sink in... That's normal!\n\n## Acceptance Steps\n\n* Talk to your mentor about what you've learnt", "labels": ["self-paced", "golang"], "tasks": [{"description": "Completed: Pointers"}, {"description": "Completed: Structs"}, {"description": "Completed: Struct Fields"}, {"description": "Completed: Pointers to structs"}, {"description": "Completed: Struct Literals"}, {"description": "Completed: Arrays"}, {"description": "Completed: Slices"}, {"description": "Completed: Slices are like references to arrays"}, {"description": "Completed: Slice literals"}, {"description": "Completed: Slice defaults"}, {"description": "Completed: Slice length and capacity"}, {"description": "Completed: Nil slices"}, {"description": "Completed: Creating a slice with make"}, {"description": "Completed: Slices of slices"}, {"description": "Completed: Appending to a slice"}, {"description": "Completed: Range"}, {"description": "Completed: Range continued"}, {"description": "Completed: Exercise: Slices"}, {"description": "Completed: Maps"}, {"description": "Completed: Map literals"}, {"description": "Completed: Map literals continued"}, {"description": "Completed: Mutating Maps"}, {"description": "Completed: Exercise: Maps"}, {"description": "Completed: Function values"}, {"description": "Completed: Function closures"}, {"description": "Completed: Exercise: Fibonacci closure"}]}
{"name": "I know about flow control statements in Golang", "story_type": "feature", "description": "On [A Tour of Go](https://tour.golang.org/welcome/1) complete the _Flow control statements_ section.\n\n## Acceptance Steps\n\n* Talk to your mentor about what you've learnt", "labels": ["self-paced", "golang"], "tasks": [{"description": "Completed: For"}, {"description": "Completed: For continued"}, {"description": "Completed: For is Go's while"}, {"description": "Completed: Forever"}, {"description": "Completed: If"}, {"description": "Completed: If with a short statement"}, {"description": "Completed: If and else"}, {"description": "Completed: Exercise: Loops and Functions"}, {"description": "Completed: Switch"}, {"description": "Completed: Switch evaluation order"}, {"description": "Completed: Switch with no condition"}, {"description": "Completed: Defer"}, {"description": "Completed: Stacking defers"}]}
{"name": "I know about packages, variables and functions in Golang", "story_type": "feature", "description": "On [A Tour of Go](https://tour.golang.org/welcome/1) complete the _Packages, variables and functions_ section.\n\n## Acceptance Steps\n\n* Talk to your mentor about what you've learnt", "labels": ["self-paced", "golang"], "tasks": [{"description": "Completed: Packages"},{"description": "Completed: Imports"},{"description": "Completed: Exported names"}, {"description": "Completed: Functions"}, {"description": "Completed: Functions continued"}, {"description": "Completed: Multiple results"}, {"description": "Completed: Named return values"}, {"description": "Completed: Variables"}, {"description": "Completed: Variables with initializers"}, {"description": "Completed: Short variable declarations"}, {"description": "Completed: Basic types"}, {"description": "Completed: Zero values"}, {"description": "Completed: Type conversions"}, {"description": "Completed: Type inference"}, {"description": "Completed: Constants"}, {"description": "Completed: Numeric Constants"}]}