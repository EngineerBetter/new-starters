---
alerts: &alerts
  on_success:
    put: slack
    params:
      alert_type: fixed
      disable: ((disable_alerts))
  on_failure:
    put: slack
    params:
      alert_type: broke
      disable: ((disable_alerts))
  on_error:
    put: slack
    params:
      alert_type: broke
      color: "#F5A623"
      disable: ((disable_alerts))

resource_types:
- name: slack-alert
  type: registry-image
  source:
    repository: arbourd/concourse-slack-alert-resource
- name: concourse-http-resource
  type: docker-image
  source:
    repository: edtan1/concourse-http-resource

resources:
- name: new-starters
  type: git
  webhook_token: ((webhook_token))
  source:
    uri: https://github.com/EngineerBetter/new-starters.git
    branch: main
- name: concourse-tasks
  type: git
  source:
    uri: https://github.com/EngineerBetter/concourse-tasks.git
    tag_filter: 0.0.39
- name: s3-bucket
  type: s3
  source:
    bucket: ((misc-ci-artifacts-bucket.bucket))
    region_name: ((misc-ci-artifacts-bucket.region_name))
    access_key_id: ((misc-ci-artifacts-bucket.access_key_id))
    secret_access_key: ((misc-ci-artifacts-bucket.secret_access_key))
    versioned_file: new-starters/csvs.tar.gz
- name: pcf-ops
  type: registry-image
  icon: docker
  source:
    repository: engineerbetter/pcf-ops
    username: ((dockerhub_user))
    password: ((dockerhub_password))
- name: slack
  type: slack-alert
  source:
    url: ((slack_webhook))
    channel: '#integrations'
    username: admin
    password: ((concourse_password))
- name: tracker-http-api
  type: concourse-http-resource
  source:
    url: https://www.pivotaltracker.com/services/v5/projects/2114884/stories/bulk
    method: GET
    headers:
      Content-Type: "application/json"
      X-TrackerToken: 89f4b2ed3c09f3690e1b14fff75c62b1

jobs:
- name: set-pipeline
  <<: *alerts
  plan:
  - get: new-starters
    trigger: true
  - set_pipeline: self
    file: new-starters/ci/pipeline.yml

- name: generate-csvs
  <<: *alerts
  plan:
  - in_parallel:
    - get: new-starters
      trigger: true
      passed: [set-pipeline]
    - get: concourse-tasks
    - get: pcf-ops
  - put: tracker-http-api
  - task: generate-csvs
    file: new-starters/ci/generate-tracker-csvs.yml
    image: pcf-ops
  - task: tarball-files
    file: concourse-tasks/tar/task.yml
    input_mapping: { input: csvs }
    output_mapping: { output: tarball }
    params:
      TARBALL_NAME: csvs
  - put: s3-bucket
    params:
      file: tarball/csvs.tar.gz
